1
first
first
this is the excerpt
<p>this is the excerpt</p>
## Title

first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. 

+ This entry is written *italics* **bold** with markdown.
+ This entry is written with markdown.
+ This entry is written with markdown.
+ This entry is written with markdown.
+ This entry is written with markdown.


2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 22nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2nd __paragraph__. 2

  1. one
  2. two
  3. three

[example link](/blog)

### Code here: 
    :::python
	from django.db import models
	from django.contrib import admin
	from markdown import markdown
	import datetime
	from django.contrib.auth.models import User
	from tagging.fields import TagField
	
	# Create your models here.
	
	
	class Category(models.Model):
	    title = models.CharField(max_length=250, help_text="250 Characters Max")
	    slug = models.SlugField(unique=True,
	        help_text="Suggested value generated from title. Must be unique.")
	    description = models.TextField()
	
	    def __unicode__(self):
	        return self.title
	
	    class Meta:
	        verbose_name_plural = "Categories"
	
	
	class CategoryAdmin(admin.ModelAdmin):
	    prepopulated_fields = {'slug': ['title']}
	
	admin.site.register(Category, CategoryAdmin)
	
	
	class Entry(models.Model):
	    LIVE_STATUS = 1
	    DRAFT_STATUS = 2
	    HIDDEN_STATUS = 3
	    STATUS_CHOICES = (
	        (LIVE_STATUS, 'Live'),
	        (DRAFT_STATUS, 'Draft'),
	        (HIDDEN_STATUS, 'Hidden'),
	    )
	    title = models.CharField(max_length=250)
	    slug = models.SlugField(unique_for_date='pub_date',
	            help_text="Suggested value generated from title. Must be unique.")
	    excerpt = models.TextField(blank=True)
	    excerpt_html = models.TextField(editable=False, blank=True)
	    body = models.TextField()
	    body_html = models.TextField(editable=False, blank=True)
	    pub_date = models.DateTimeField(default=datetime.datetime.now)
	    modified_date = models.DateTimeField(default=datetime.datetime.now)
	    author = models.ForeignKey(User)
	    enable_comments = models.BooleanField(default=True)
	    featured = models.BooleanField(default=False)
	    status = models.IntegerField(choices=STATUS_CHOICES, default=LIVE_STATUS)
	    categories = models.ManyToManyField(Category)
	    # tags = TagField()
	
	    def save(self, force_insert=False, force_update=False):
	        self.body_html = markdown(self.body, ['codehilite', 'headerid'])
	        if self.excerpt:
	            self.excerpt_html = markdown(self.excerpt, ['codehilite'])
	        super(Entry, self).save(force_insert, force_update)
	
	    class Meta:
	        verbose_name_plural = "Entries"
	        ordering = ['-pub_date']
	
	    def __unicode__(self):
	        return self.title
	
	    def get_absolute_url(self):
	        return "/blog/%s/%s/" % (self.pub_date.strftime("%Y/%b/%d").lower(),
	                                 self.slug)
	
	
	class EntryAdmin(admin.ModelAdmin):
	    prepopulated_fields = {'slug': ['title']}
	    list_display = ['title', 'status', 'pub_date']
	
	admin.site.register(Entry, EntryAdmin)
	
	
	class Link(models.Model):
	    title = models.CharField(max_length=250)
	    description = models.TextField(blank=True)
	    description_html = models.TextField(blank=True)
	    url = models.URLField(unique=True)
	    posted_by = models.ForeignKey(User)
	    pub_date = models.DateTimeField(default=datetime.datetime.now)
	    slug = models.SlugField(unique_for_date='pub_date')
	    # tags = TagField()
	    enable_comments = models.BooleanField(default=False)
	    post_elsewhere = models.BooleanField(default=False)

-----------------------------------------------



<h2>Title</h2>
<p>first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. first paragraph. </p>
<ul>
<li>This entry is written <em>italics</em> <strong>bold</strong> with markdown.</li>
<li>This entry is written with markdown.</li>
<li>This entry is written with markdown.</li>
<li>This entry is written with markdown.</li>
<li>This entry is written with markdown.</li>
</ul>
<p>2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 22nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2nd <strong>paragraph</strong>. 2</p>
<ol>
<li>one</li>
<li>two</li>
<li>three</li>
</ol>
<p><a href="/blog">example link</a></p>
<h3>Code here:</h3>
<div class="codehilite"><pre><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>
<span class="kn">from</span> <span class="nn">django.contrib</span> <span class="kn">import</span> <span class="n">admin</span>
<span class="kn">from</span> <span class="nn">markdown</span> <span class="kn">import</span> <span class="n">markdown</span>
<span class="kn">import</span> <span class="nn">datetime</span>
<span class="kn">from</span> <span class="nn">django.contrib.auth.models</span> <span class="kn">import</span> <span class="n">User</span>
<span class="kn">from</span> <span class="nn">tagging.fields</span> <span class="kn">import</span> <span class="n">TagField</span>

<span class="c"># Create your models here.</span>


<span class="k">class</span> <span class="nc">Category</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">title</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">250</span><span class="p">,</span> <span class="n">help_text</span><span class="o">=</span><span class="s">&quot;250 Characters Max&quot;</span><span class="p">)</span>
    <span class="n">slug</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">SlugField</span><span class="p">(</span><span class="n">unique</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
        <span class="n">help_text</span><span class="o">=</span><span class="s">&quot;Suggested value generated from title. Must be unique.&quot;</span><span class="p">)</span>
    <span class="n">description</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">__unicode__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">title</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s">&quot;Categories&quot;</span>


<span class="k">class</span> <span class="nc">CategoryAdmin</span><span class="p">(</span><span class="n">admin</span><span class="o">.</span><span class="n">ModelAdmin</span><span class="p">):</span>
    <span class="n">prepopulated_fields</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;slug&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]}</span>

<span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">Category</span><span class="p">,</span> <span class="n">CategoryAdmin</span><span class="p">)</span>


<span class="k">class</span> <span class="nc">Entry</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">LIVE_STATUS</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="n">DRAFT_STATUS</span> <span class="o">=</span> <span class="mi">2</span>
    <span class="n">HIDDEN_STATUS</span> <span class="o">=</span> <span class="mi">3</span>
    <span class="n">STATUS_CHOICES</span> <span class="o">=</span> <span class="p">(</span>
        <span class="p">(</span><span class="n">LIVE_STATUS</span><span class="p">,</span> <span class="s">&#39;Live&#39;</span><span class="p">),</span>
        <span class="p">(</span><span class="n">DRAFT_STATUS</span><span class="p">,</span> <span class="s">&#39;Draft&#39;</span><span class="p">),</span>
        <span class="p">(</span><span class="n">HIDDEN_STATUS</span><span class="p">,</span> <span class="s">&#39;Hidden&#39;</span><span class="p">),</span>
    <span class="p">)</span>
    <span class="n">title</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">250</span><span class="p">)</span>
    <span class="n">slug</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">SlugField</span><span class="p">(</span><span class="n">unique_for_date</span><span class="o">=</span><span class="s">&#39;pub_date&#39;</span><span class="p">,</span>
            <span class="n">help_text</span><span class="o">=</span><span class="s">&quot;Suggested value generated from title. Must be unique.&quot;</span><span class="p">)</span>
    <span class="n">excerpt</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">(</span><span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">excerpt_html</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">(</span><span class="n">editable</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">body</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">()</span>
    <span class="n">body_html</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">(</span><span class="n">editable</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">pub_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">)</span>
    <span class="n">modified_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">)</span>
    <span class="n">author</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">User</span><span class="p">)</span>
    <span class="n">enable_comments</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">featured</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="n">status</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">choices</span><span class="o">=</span><span class="n">STATUS_CHOICES</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="n">LIVE_STATUS</span><span class="p">)</span>
    <span class="n">categories</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ManyToManyField</span><span class="p">(</span><span class="n">Category</span><span class="p">)</span>
    <span class="c"># tags = TagField()</span>

    <span class="k">def</span> <span class="nf">save</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">force_insert</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">force_update</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">body_html</span> <span class="o">=</span> <span class="n">markdown</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">body</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;codehilite&#39;</span><span class="p">,</span> <span class="s">&#39;headerid&#39;</span><span class="p">])</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">excerpt</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">excerpt_html</span> <span class="o">=</span> <span class="n">markdown</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">excerpt</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;codehilite&#39;</span><span class="p">])</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">Entry</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">force_insert</span><span class="p">,</span> <span class="n">force_update</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s">&quot;Entries&quot;</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;-pub_date&#39;</span><span class="p">]</span>

    <span class="k">def</span> <span class="nf">__unicode__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">title</span>

    <span class="k">def</span> <span class="nf">get_absolute_url</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s">&quot;/blog/</span><span class="si">%s</span><span class="s">/</span><span class="si">%s</span><span class="s">/&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pub_date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">&quot;%Y/%b/</span><span class="si">%d</span><span class="s">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">lower</span><span class="p">(),</span>
                                 <span class="bp">self</span><span class="o">.</span><span class="n">slug</span><span class="p">)</span>


<span class="k">class</span> <span class="nc">EntryAdmin</span><span class="p">(</span><span class="n">admin</span><span class="o">.</span><span class="n">ModelAdmin</span><span class="p">):</span>
    <span class="n">prepopulated_fields</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;slug&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">]}</span>
    <span class="n">list_display</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;title&#39;</span><span class="p">,</span> <span class="s">&#39;status&#39;</span><span class="p">,</span> <span class="s">&#39;pub_date&#39;</span><span class="p">]</span>

<span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">Entry</span><span class="p">,</span> <span class="n">EntryAdmin</span><span class="p">)</span>


<span class="k">class</span> <span class="nc">Link</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">title</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">250</span><span class="p">)</span>
    <span class="n">description</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">(</span><span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">description_html</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">(</span><span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">url</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">URLField</span><span class="p">(</span><span class="n">unique</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">posted_by</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">User</span><span class="p">)</span>
    <span class="n">pub_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">)</span>
    <span class="n">slug</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">SlugField</span><span class="p">(</span><span class="n">unique_for_date</span><span class="o">=</span><span class="s">&#39;pub_date&#39;</span><span class="p">)</span>
    <span class="c"># tags = TagField()</span>
    <span class="n">enable_comments</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="n">post_elsewhere</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">BooleanField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</pre></div>


<hr>
2015-06-23 19:20:46
2015-07-01 17:55:25
1
1
0
1
2
Markdown Example
markdown-example
Markdown usage
<p>Markdown usage</p>
An h1 header
============

Paragraphs are separated by a blank line.

2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists
look like:

  * this one
  * that one
  * the other one

Note that --- not considering the asterisk --- the actual text
content starts at 4-columns in.

> Block quotes are
> written like so.
>
> They can span multiple paragraphs,
> if you like.

Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it's all
in chapters 12--14"). Three dots ... will be converted to an ellipsis.
Unicode is supported. ☺



An h2 header
------------

Here's a numbered list:

 1. first item
 2. second item
 3. third item

Note again how the actual text starts at 4 columns in (4 characters
from the left side). Here's a code sample:

    # Let me re-iterate ...
    for i in 1 .. 10 { do-something(i) }

As you probably guessed, indented 4 spaces. By the way, instead of
indenting the block, you can use delimited blocks, if you like:

~~~
define foobar() {
    print "Welcome to flavor country!";
}
~~~

(which makes copying & pasting easier). You can optionally mark the
delimited block for Pandoc to syntax highlight it:

~~~python
import time
# Quick, count to ten!
for i in range(10):
    # (but not *too* quick)
    time.sleep(0.5)
    print i
~~~



### An h3 header ###

Now a nested list:

 1. First, get these ingredients:

      * carrots
      * celery
      * lentils

 2. Boil some water.

 3. Dump everything in the pot and follow
    this algorithm:

        find wooden spoon
        uncover pot
        stir
        cover pot
        balance wooden spoon precariously on pot handle
        wait 10 minutes
        goto first step (or shut off burner when done)

    Do not bump wooden spoon or it will fall.

Notice again how text always lines up on 4-space indents (including
that last line which continues item 3 above).

Here's a link to [a website](http://foo.bar), to a [local
doc](local-doc.html), and to a [section heading in the current
doc](#an-h2-header). Here's a footnote [^1].

[^1]: Footnote text goes here.

Tables can look like this:

size  material      color
----  ------------  ------------
9     leather       brown
10    hemp canvas   natural
11    glass         transparent

Table: Shoes, their sizes, and what they're made of

(The above is the caption for the table.) Pandoc also supports
multi-line tables:

--------  -----------------------
keyword   text
--------  -----------------------
red       Sunsets, apples, and
          other red or reddish
          things.

green     Leaves, grass, frogs
          and other things it's
          not easy being.
--------  -----------------------

A horizontal rule follows.

***

Here's a definition list:

apples
  : Good for making applesauce.
oranges
  : Citrus!
tomatoes
  : There's no "e" in tomatoe.

Again, text is indented 4 spaces. (Put a blank line between each
term/definition pair to spread things out more.)

Here's a "line block":


 Line one

   Line too

 Line tree

and images can be specified like so:

![example image](example-image.jpg "An exemplary image")

Inline math equations go in like so: $\omega = d\phi / dt$. Display
math should get its own line and be put in in double-dollarsigns:

$$I = \int \rho R^{2} dV$$

And note that you can backslash-escape any punctuation characters
which you wish to be displayed literally, ex.: \`foo\`, \*bar\*, etc.

<h1 id="an-h1-header">An h1 header</h1>
<p>Paragraphs are separated by a blank line.</p>
<p>2nd paragraph. <em>Italic</em>, <strong>bold</strong>, and <code>monospace</code>. Itemized lists
look like:</p>
<ul>
<li>this one</li>
<li>that one</li>
<li>the other one</li>
</ul>
<p>Note that --- not considering the asterisk --- the actual text
content starts at 4-columns in.</p>
<blockquote>
<p>Block quotes are
written like so.</p>
<p>They can span multiple paragraphs,
if you like.</p>
</blockquote>
<p>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., "it's all
in chapters 12--14"). Three dots ... will be converted to an ellipsis.
Unicode is supported. ☺</p>
<h2 id="an-h2-header">An h2 header</h2>
<p>Here's a numbered list:</p>
<ol>
<li>first item</li>
<li>second item</li>
<li>third item</li>
</ol>
<p>Note again how the actual text starts at 4 columns in (4 characters
from the left side). Here's a code sample:</p>
<pre class="codehilite"><code># Let me re-iterate ...
for i in 1 .. 10 { do-something(i) }</code></pre>


<p>As you probably guessed, indented 4 spaces. By the way, instead of
indenting the block, you can use delimited blocks, if you like:</p>
<p>~~~
define foobar() {
    print "Welcome to flavor country!";
}
~~~</p>
<p>(which makes copying &amp; pasting easier). You can optionally mark the
delimited block for Pandoc to syntax highlight it:</p>
<p>~~~python
import time</p>
<h1 id="quick-count-to-ten">Quick, count to ten!</h1>
<p>for i in range(10):
    # (but not <em>too</em> quick)
    time.sleep(0.5)
    print i
~~~</p>
<h3 id="an-h3-header">An h3 header</h3>
<p>Now a nested list:</p>
<ol>
<li>
<p>First, get these ingredients:</p>
<ul>
<li>carrots</li>
<li>celery</li>
<li>lentils</li>
</ul>
</li>
<li>
<p>Boil some water.</p>
</li>
<li>
<p>Dump everything in the pot and follow
    this algorithm:</p>
<pre class="codehilite"><code>find wooden spoon
uncover pot
stir
cover pot
balance wooden spoon precariously on pot handle
wait 10 minutes
goto first step (or shut off burner when done)</code></pre>


<p>Do not bump wooden spoon or it will fall.</p>
</li>
</ol>
<p>Notice again how text always lines up on 4-space indents (including
that last line which continues item 3 above).</p>
<p>Here's a link to <a href="http://foo.bar">a website</a>, to a <a href="local-doc.html">local
doc</a>, and to a <a href="#an-h2-header">section heading in the current
doc</a>. Here's a footnote [^1].</p>
<p>[^1]: Footnote text goes here.</p>
<p>Tables can look like this:</p>
<p>size  material      color</p>
<hr />
<p>9     leather       brown
10    hemp canvas   natural
11    glass         transparent</p>
<p>Table: Shoes, their sizes, and what they're made of</p>
<p>(The above is the caption for the table.) Pandoc also supports
multi-line tables:</p>
<hr />
<p>keyword   text</p>
<hr />
<p>red       Sunsets, apples, and
          other red or reddish
          things.</p>
<p>green     Leaves, grass, frogs
          and other things it's
          not easy being.</p>
<hr />
<p>A horizontal rule follows.</p>
<hr />
<p>Here's a definition list:</p>
<p>apples
  : Good for making applesauce.
oranges
  : Citrus!
tomatoes
  : There's no "e" in tomatoe.</p>
<p>Again, text is indented 4 spaces. (Put a blank line between each
term/definition pair to spread things out more.)</p>
<p>Here's a "line block":</p>
<p>
 Line one

   Line too

 Line tree</p>
<p>and images can be specified like so:</p>
<p><img alt="example image" src="example-image.jpg" title="An exemplary image" /></p>
<p>Inline math equations go in like so: $\omega = d\phi / dt$. Display
math should get its own line and be put in in double-dollarsigns:</p>
<p>$$I = \int \rho R^{2} dV$$</p>
<p>And note that you can backslash-escape any punctuation characters
which you wish to be displayed literally, ex.: `foo`, *bar*, etc.</p>
2015-06-23 19:48:49
2015-06-23 19:48:49
1
1
0
1
3
Pip
pip
The python package installer
<p>The python package installer</p>
[Docs for Pip](https://pip.pypa.io/en/latest/index.html)
<p><a href="https://pip.pypa.io/en/latest/index.html">Docs for Pip</a></p>
2015-06-23 20:38:56
2015-06-23 20:38:56
1
1
0
1
4
Starting a Django Project
starting-django-project
Steps for starting a django project
<p>Steps for starting a django project</p>
1. [Install virtualenv and virtualenvwrapper](http://virtualenvwrapper.readthedocs.org/en/latest/install.html#shell-startup-file)
2. create a directory for the project
3. run django-admin startproject
4. create environment variables for sensitive information like username, password, secret key.  Put this in the bin/activate file for the virtual environment
5. add get_env_variables.py to the directory where settings.py is 
6. import get_env_variables to settings.py and use it to populate sensitive variables
7. install git
8. set up .gitignore
9. put project in git repository
10. push it to github
11. go to work
<ol>
<li><a href="http://virtualenvwrapper.readthedocs.org/en/latest/install.html#shell-startup-file">Install virtualenv and virtualenvwrapper</a></li>
<li>create a directory for the project</li>
<li>run django-admin startproject</li>
<li>create environment variables for sensitive information like username, password, secret key.  Put this in the bin/activate file for the virtual environment</li>
<li>add get_env_variables.py to the directory where settings.py is </li>
<li>import get_env_variables to settings.py and use it to populate sensitive variables</li>
<li>install git</li>
<li>set up .gitignore</li>
<li>put project in git repository</li>
<li>push it to github</li>
<li>go to work</li>
</ol>
2015-06-23 21:19:25
2015-07-01 16:22:27
1
1
0
1
5
Notes on deployment
notes-deployment
Notes on deploying two (or more) django projects, each running in its own virtualenvwrapper environment.
<p>Notes on deploying two (or more) django projects, each running in its own virtualenvwrapper environment.</p>
 * setting up virtualenvwrapper
 * pulling git repository
 * setting environment variables using bin/postactivate bash commands (site 2 scoops)
 * collect static
 * test with django runserver
 * gunicorn -- run in virtualenv
 * /etc/nginx/sites-enabled/config -- setting up to serve static for multiple domains on port 80
 *upstart
<ul>
<li>setting up virtualenvwrapper</li>
<li>pulling git repository</li>
<li>setting environment variables using bin/postactivate bash commands (site 2 scoops)</li>
<li>collect static</li>
<li>test with django runserver</li>
<li>gunicorn -- run in virtualenv</li>
<li>/etc/nginx/sites-enabled/config -- setting up to serve static for multiple domains on port 80
 *upstart</li>
</ul>
2016-02-21 13:07:02
2016-02-21 13:07:02
1
1
0
1
